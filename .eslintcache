[{"E:\\channeldata\\programmings\\react-firebase-auth-crud\\src\\App.js":"1","E:\\channeldata\\programmings\\react-firebase-auth-crud\\src\\layouts\\NavBar.js":"2","E:\\channeldata\\programmings\\react-firebase-auth-crud\\src\\authentication\\Login.js":"3","E:\\channeldata\\programmings\\react-firebase-auth-crud\\src\\authentication\\SignUp.js":"4","E:\\channeldata\\programmings\\react-firebase-auth-crud\\src\\helpers\\db.js":"5","E:\\channeldata\\programmings\\react-firebase-auth-crud\\src\\screens\\Customer.js":"6","E:\\channeldata\\programmings\\react-firebase-auth-crud\\src\\index.js":"7","E:\\channeldata\\programmings\\react-firebase-auth-crud\\src\\models\\customer.js":"8","E:\\channeldata\\programmings\\react-firebase-auth-crud\\src\\screens\\CustomerDialog.js":"9","E:\\channeldata\\programmings\\react-firebase-auth-crud\\src\\data\\customerData.js":"10"},{"size":991,"mtime":1606576088735,"results":"11","hashOfConfig":"12"},{"size":2564,"mtime":1606574560485,"results":"13","hashOfConfig":"12"},{"size":6345,"mtime":1606574314522,"results":"14","hashOfConfig":"12"},{"size":6613,"mtime":1606573351574,"results":"15","hashOfConfig":"12"},{"size":531,"mtime":1606569620605,"results":"16","hashOfConfig":"12"},{"size":10152,"mtime":1606581824162,"results":"17","hashOfConfig":"12"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"12"},{"size":423,"mtime":1606577853370,"results":"19","hashOfConfig":"12"},{"size":6020,"mtime":1606580256716,"results":"20","hashOfConfig":"12"},{"size":1693,"mtime":1606581695997,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ww7o60",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\channeldata\\programmings\\react-firebase-auth-crud\\src\\App.js",[],"E:\\channeldata\\programmings\\react-firebase-auth-crud\\src\\layouts\\NavBar.js",["43"],"E:\\channeldata\\programmings\\react-firebase-auth-crud\\src\\authentication\\Login.js",[],"E:\\channeldata\\programmings\\react-firebase-auth-crud\\src\\authentication\\SignUp.js",["44"],"import React, {useEffect, useState} from 'react';\r\nimport {Container, CssBaseline, Avatar, Typography, \r\n    Button, Grid, Link, makeStyles, Card, CardContent} from '@material-ui/core';\r\nimport {LockRounded} from '@material-ui/icons';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport fire from '../helpers/db';\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\n\r\nconst SignUp = (props) => {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    \r\n    const handleEmail = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const handlePassword = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n    const handleConfirmPassowerd = (event) => {\r\n        setConfirmPassword(event.target.value);\r\n    }\r\n    const handleSignUp = () => {\r\n        fire.auth()\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then(response => {\r\n                if(response) {\r\n                    props.toggle();\r\n                    toast.success('User Registered Successfully');\r\n                }\r\n            }).catch((error) => {\r\n                switch (error.code) {\r\n                    case 'auth/email-already-in-use':\r\n                        toast.error(error.message);\r\n                        break;\r\n                    case 'auth/invalid-email': \r\n                        toast.error(error.message);                    \r\n                        break;\r\n                    case 'auth/weak-password':\r\n                        toast.error(error.message);\r\n                        break;\r\n                }\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n            if(value !== password) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        return () => {\r\n            ValidatorForm.removeValidationRule('isPasswordMatch');\r\n        }\r\n    }, [password])\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <ToastContainer/>\r\n                    <CssBaseline/>\r\n                    <div className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockRounded/>\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign Up\r\n                        </Typography>\r\n                        <ValidatorForm \r\n                         onSubmit={handleSignUp}\r\n                         className={classes.form}>\r\n                        <TextValidator\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                label=\"Email\"\r\n                                onChange={handleEmail}\r\n                                name=\"email\"\r\n                                value={email}\r\n                                validators={['required', 'isEmail']}\r\n                                errorMessages={['this field is required', 'email is not valid']}\r\n                                autoComplete='off'\r\n                            />\r\n                            <br/>\r\n                            <TextValidator\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                label=\"Password\"\r\n                                onChange={handlePassword}\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                value={password}\r\n                                validators={['required']}\r\n                                errorMessages={['this field is required']}\r\n                                autoComplete=\"off\"\r\n                            />\r\n                            <br/>\r\n                            <TextValidator\r\n                                variant=\"outlined\"\r\n                                label=\"Confirm password\"\r\n                                fullWidth\r\n                                onChange={handleConfirmPassowerd}\r\n                                name=\"confirmPassword\"\r\n                                type=\"password\"\r\n                                validators={['isPasswordMatch', 'required']}\r\n                                errorMessages={['password mismatch', 'this field is required']}\r\n                                value={confirmPassword}\r\n                                autoComplete=\"off\"\r\n                            />\r\n                             <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                className={classes.submit}\r\n                            >\r\n                                Sign Up\r\n                            </Button>\r\n                            <Grid container>\r\n                                <Grid item>\r\n                                <Link onClick={props.toggle} className={classes.pointer} variant=\"body2\">\r\n                                    {\"Already have an account? Sign In\"}\r\n                                </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </ValidatorForm>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      },\r\n      avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n      },\r\n      form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n      },\r\n      submit: {\r\n          background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n          margin: theme.spacing(3, 0, 2),\r\n          color: '#fff'\r\n      },\r\n      card: {\r\n          marginTop: '60px',\r\n          paddingLeft: '20px',\r\n          paddingRight: '20px',\r\n          paddingBottom: '20px',\r\n      },\r\n      pointer: {\r\n          cursor: 'pointer',\r\n          color: 'red'\r\n      }\r\n}))\r\nexport default SignUp;","E:\\channeldata\\programmings\\react-firebase-auth-crud\\src\\helpers\\db.js",[],"E:\\channeldata\\programmings\\react-firebase-auth-crud\\src\\screens\\Customer.js",[],"E:\\channeldata\\programmings\\react-firebase-auth-crud\\src\\index.js",[],"E:\\channeldata\\programmings\\react-firebase-auth-crud\\src\\models\\customer.js",[],"E:\\channeldata\\programmings\\react-firebase-auth-crud\\src\\screens\\CustomerDialog.js",[],"E:\\channeldata\\programmings\\react-firebase-auth-crud\\src\\data\\customerData.js",[],{"ruleId":"45","severity":1,"message":"46","line":7,"column":18,"nodeType":"47","messageId":"48","endLine":7,"endColumn":25},{"ruleId":"49","severity":1,"message":"50","line":35,"column":17,"nodeType":"51","messageId":"52","endLine":45,"endColumn":18},"no-unused-vars","'setAuth' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase"]